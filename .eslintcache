[{"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\index.tsx":"1","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\reportWebVitals.ts":"2","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\App.tsx":"3","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\dashboard.page.tsx":"4","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\budget\\budget.page.tsx":"5","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\register\\register.page.tsx":"6","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\login\\login.page.tsx":"7","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\dashboard.styled.tsx":"8","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\register\\register.styled.tsx":"9","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\register\\register.service.tsx":"10","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\fetchers\\useFetchSaldoTotal.hook.tsx":"11","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\budget\\components\\modal-registo.component.tsx":"12","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\components\\modal-registo.component.tsx":"13","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\login\\login.styled.tsx":"14","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\login\\login.service.tsx":"15","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\fetchers\\useFetchSubCategorias.hook.tsx":"16","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\dashboard.service.tsx":"17","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\fetchers\\useFetchContas.hook.tsx":"18","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\fetchers\\useFetchCategorias.hook.tsx":"19","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\budget\\budget.service.tsx":"20","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\fetchers\\useFetchMovimentos.hook.tsx":"21"},{"size":517,"mtime":1609786479986,"results":"22","hashOfConfig":"23"},{"size":440,"mtime":1609786479991,"results":"24","hashOfConfig":"23"},{"size":1211,"mtime":1609788100930,"results":"25","hashOfConfig":"23"},{"size":9082,"mtime":1611423367533,"results":"26","hashOfConfig":"23"},{"size":3729,"mtime":1609852619266,"results":"27","hashOfConfig":"23"},{"size":9344,"mtime":1610392895850,"results":"28","hashOfConfig":"23"},{"size":4462,"mtime":1611416831129,"results":"29","hashOfConfig":"23"},{"size":1211,"mtime":1608580578245,"results":"30","hashOfConfig":"23"},{"size":870,"mtime":1608580578255,"results":"31","hashOfConfig":"23"},{"size":691,"mtime":1608580578253,"results":"32","hashOfConfig":"23"},{"size":885,"mtime":1608580578247,"results":"33","hashOfConfig":"23"},{"size":6829,"mtime":1611424624258,"results":"34","hashOfConfig":"23"},{"size":9518,"mtime":1611423367532,"results":"35","hashOfConfig":"23"},{"size":799,"mtime":1608580578251,"results":"36","hashOfConfig":"23"},{"size":339,"mtime":1611416831130,"results":"37","hashOfConfig":"23"},{"size":971,"mtime":1611423367537,"results":"38","hashOfConfig":"23"},{"size":1713,"mtime":1611423662916,"results":"39","hashOfConfig":"23"},{"size":866,"mtime":1610402110640,"results":"40","hashOfConfig":"23"},{"size":904,"mtime":1611423367535,"results":"41","hashOfConfig":"23"},{"size":976,"mtime":1611423351003,"results":"42","hashOfConfig":"23"},{"size":956,"mtime":1611423367536,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1xvilm7",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\index.tsx",[],["91","92"],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\reportWebVitals.ts",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\App.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\dashboard.page.tsx",["93"],"import * as React from \"react\";\r\nimport * as S from \"./dashboard.styled\";\r\n\r\nimport * as BS from \"react-bootstrap\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nimport ModalRegisto from \"./components/modal-registo.component\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport useFetchSaldoTotal from \"./fetchers/useFetchSaldoTotal.hook\";\r\n\r\ninterface IDashboarPageProps {}\r\n\r\nexport const DashboarPage: React.FC<IDashboarPageProps> = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [response, error, isLoading] = useFetchSaldoTotal();\r\n\r\n  const dataDespesa = {\r\n    labels: [\"Supermercado\", \"Cinema\", \"Gin√°sio\"],\r\n    datasets: [\r\n      {\r\n        data: [300, 50, 100],\r\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const dataReceita = {\r\n    labels: [\"EMprego\", \"Bolsa\", \"Outros\"],\r\n    datasets: [\r\n      {\r\n        data: [900, 130, 100],\r\n        backgroundColor: [\"#3ba549\", \"#3642EB\", \"#F0CE06\"],\r\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [showModalReceita, setShouModalReceita] = React.useState<boolean>(\r\n    false\r\n  );\r\n\r\n  const renderModalReceita = () => {\r\n    return (\r\n      <ModalRegisto\r\n        show={showModalReceita}\r\n        onHide={setShouModalReceita}\r\n      ></ModalRegisto>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <S.PageContainer>\r\n      <BS.Container fluid className=\"h-100\">\r\n        <BS.Row className=\"h-100\">\r\n          <BS.Col lg={2} className=\"sidebar\">\r\n            <BS.Container>\r\n              <BS.Row\r\n                className=\"branco\"\r\n                onClick={() => {\r\n                  history.push(\"/dashboard\");\r\n                }}\r\n              >\r\n                <h1 className=\"w-100\">Save iT</h1>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Image\r\n                    className={\"avatar\"}\r\n                    src=\"images/avatar.png\"\r\n                    rounded\r\n                  />\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <h5 className=\"branco\">Bem vindo Tiago!</h5>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\"\r\n                  onClick={() => {\r\n                      history.push(\"/budget\");\r\n                    }}\r\n                    >\r\n                    Planeamentos\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Investimentos\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Alertas\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Defini√ß√µes\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button\r\n                    variant=\"secondary\"\r\n                    className=\"fundo-cizento\"\r\n                    onClick={() => {\r\n                      history.push(\"/login\");\r\n                    }}\r\n                  >\r\n                    Sair\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n            </BS.Container>\r\n          </BS.Col>\r\n          <BS.Col lg={10}>\r\n            <BS.Container fluid className=\"mt-2\">\r\n              <BS.Row>\r\n                <BS.Col lg={3}>\r\n                  <BS.Card className={\"saldo-total\"}>\r\n                    <BS.Card.Body>\r\n                      <BS.Card.Title>Saldo Total</BS.Card.Title>\r\n                      <BS.Card.Text>\r\n                        {isLoading\r\n                          ? \"loading...\"\r\n                          : `${response.saldoTotal} ${response.currency}`}\r\n                      </BS.Card.Text>\r\n                    </BS.Card.Body>\r\n                  </BS.Card>\r\n                </BS.Col>\r\n                <BS.Col lg={3}>\r\n                  <BS.Carousel className={\"saldo-conta\"} indicators={false}>\r\n                    <BS.Carousel.Item>\r\n                      <h5>Saldo Conta</h5>\r\n                      <h5>15,00‚Ç¨</h5>\r\n                      <p>AtivoBank</p>\r\n                    </BS.Carousel.Item>\r\n                  </BS.Carousel>\r\n                </BS.Col>\r\n                <BS.Col lg={3}>\r\n                  <BS.Carousel className={\"saldo-receita\"} indicators={false}>\r\n                    <BS.Carousel.Item>\r\n                      <h5>Receita Mensal</h5>\r\n                      <h5>4,00‚Ç¨</h5>\r\n                      <p>novembro 2020</p>\r\n                    </BS.Carousel.Item>\r\n                  </BS.Carousel>\r\n                </BS.Col>\r\n                <BS.Col lg={3}>\r\n                  <BS.Carousel className={\"saldo-despesa\"} indicators={false}>\r\n                    <BS.Carousel.Item>\r\n                      <h5>Despesa Mensal</h5>\r\n                      <h5>56,00‚Ç¨</h5>\r\n                      <p>novembro 2020</p>\r\n                    </BS.Carousel.Item>\r\n                  </BS.Carousel>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className={\"mt-2\"}>\r\n                <BS.Col lg=\"8\"></BS.Col>\r\n                <BS.Col lg=\"4\">\r\n                  <BS.Row>\r\n                    <BS.Col lg=\"12\">\r\n                      <BS.Card>\r\n                        <BS.Card.Body>\r\n                          <BS.Card.Title>Receitas novembro 2020</BS.Card.Title>\r\n                          <BS.Card.Text>\r\n                            <Doughnut data={dataReceita} />\r\n                          </BS.Card.Text>\r\n                        </BS.Card.Body>\r\n                      </BS.Card>\r\n                    </BS.Col>\r\n                  </BS.Row>\r\n                  <BS.Row className={\"mt-2\"}>\r\n                    <BS.Col lg={12}>\r\n                      <BS.Card>\r\n                        <BS.Card.Body>\r\n                          <BS.Card.Title>Despesas novembro 2020</BS.Card.Title>\r\n                          <BS.Card.Text>\r\n                            <Doughnut data={dataDespesa} />\r\n                          </BS.Card.Text>\r\n                        </BS.Card.Body>\r\n                      </BS.Card>\r\n                    </BS.Col>\r\n                  </BS.Row>\r\n                </BS.Col>\r\n              </BS.Row>\r\n            </BS.Container>\r\n          </BS.Col>\r\n        </BS.Row>\r\n      </BS.Container>\r\n      <BS.DropdownButton\r\n        id=\"dropdown-basic-button\"\r\n        title=\"+\"\r\n        drop={\"up\"}\r\n        className=\"add-button\"\r\n      >\r\n        <BS.Dropdown.Item\r\n          onClick={() => {\r\n            setShouModalReceita(!showModalReceita);\r\n          }}\r\n        >\r\n          Receita\r\n        </BS.Dropdown.Item>\r\n        <BS.Dropdown.Item href=\"#/action-2\">Despesa</BS.Dropdown.Item>\r\n        <BS.Dropdown.Item href=\"#/action-3\">Conta</BS.Dropdown.Item>\r\n        <BS.Dropdown.Item href=\"#/action-4\">Categoria</BS.Dropdown.Item>\r\n      </BS.DropdownButton>\r\n      {renderModalReceita()}\r\n    </S.PageContainer>\r\n  );\r\n};\r\n","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\budget\\budget.page.tsx",["94"],"import * as React from \"react\";\r\nimport * as S from \"../../pages/dashboard/dashboard.styled\";\r\n\r\nimport * as BS from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\n\r\nimport ModalRegisto from \"./components/modal-registo.component\";\r\n\r\n\r\n  interface IBudgetPageProps {}\r\n\r\n\r\n  export const BudgetPage: React.FC<IBudgetPageProps> = (props) => {\r\n    const history = useHistory();\r\n\r\n    const [showModalOrcamento, setShowModalOrcamento] = React.useState<boolean>(\r\n        false\r\n      );\r\n    \r\n      const renderModalOrcamento= () => {\r\n        return (\r\n          <ModalRegisto\r\n            show={showModalOrcamento}\r\n            onHide={setShowModalOrcamento}\r\n          ></ModalRegisto>\r\n        );\r\n      };\r\n\r\n    return (\r\n      <S.PageContainer>\r\n      <BS.Container fluid className=\"h-100\">\r\n        <BS.Row className=\"h-100\">\r\n          <BS.Col lg={2} className=\"sidebar\">\r\n            <BS.Container>\r\n              <BS.Row\r\n                className=\"branco\"\r\n                onClick={() => {\r\n                  history.push(\"/dashboard\");\r\n                }}\r\n              >\r\n                <h1 className=\"w-100\">Save iT</h1>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Image\r\n                    className={\"avatar\"}\r\n                    src=\"images/avatar.png\"\r\n                    rounded\r\n                  />\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <h5 className=\"branco\">Bem vindo Tiago!</h5>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Planeamentos\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Investimentos\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Alertas\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Defini√ß√µes\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button\r\n                    variant=\"secondary\"\r\n                    className=\"fundo-cizento\"\r\n                    onClick={() => {\r\n                      history.push(\"/login\");\r\n                    }}\r\n                  >\r\n                    Sair\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n            </BS.Container>\r\n          </BS.Col> \r\n        </BS.Row>\r\n      </BS.Container>\r\n\r\n      <BS.DropdownButton\r\n        id=\"dropdown-basic-button\"\r\n        title=\"+\"\r\n        drop={\"up\"}\r\n        className=\"add-button\"\r\n      >\r\n        <BS.Dropdown.Item\r\n          onClick={() => {\r\n            setShowModalOrcamento(!showModalOrcamento);\r\n          }}\r\n        >Novo Or√ßamento\r\n        </BS.Dropdown.Item>\r\n      </BS.DropdownButton>\r\n      {renderModalOrcamento()}\r\n      </S.PageContainer>      \r\n    );\r\n};","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\register\\register.page.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\login\\login.page.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\dashboard.styled.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\register\\register.styled.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\register\\register.service.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\fetchers\\useFetchSaldoTotal.hook.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\budget\\components\\modal-registo.component.tsx",["95","96","97"],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\components\\modal-registo.component.tsx",["98","99","100","101"],"import * as React from \"react\";\r\nimport * as BS from \"react-bootstrap\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { IMovimentoData, SERVICE } from \"../dashboard.service\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Formik } from \"formik\";\r\n\r\nimport useFetchCategorias, {\r\n  ICategoria,\r\n} from \"../fetchers/useFetchCategorias.hook\";\r\n\r\nimport useFetchSubCategoria, {\r\n  ISubCategoria,\r\n} from \"../fetchers/useFetchSubCategorias.hook\";\r\n\r\nimport useFetchContas, { IConta } from \"../fetchers/useFetchContas.hook\";\r\n\r\ninterface IModalRegistoProps {\r\n  show: boolean;\r\n  onHide: (show: boolean) => void;\r\n}\r\n\r\nconst schema = yup.object({\r\n  id_utilizador: yup.number(),\r\n  descricao: yup.string().trim().required().min(1).max(30),\r\n  categoria: yup.number().required(),\r\n  sub_categoria: yup.number().min(2).max(100),\r\n  montante: yup.number().required().min(0.1).max(10000),\r\n  data: yup.string().required(),\r\n  // recorrencia: yup.string().trim().oneOf([\"Mensal\", \"Anual\"]),\r\n  id_conta: yup.number(),\r\n  tipo: yup.string().trim(),\r\n});\r\n\r\nconst initialValues: IMovimentoData = {\r\n  //Quando houver sess√£o remover isto, o servidor deve identificar o user em sess√£o.\r\n  id_utilizador: 4,\r\n  descricao: \"\",\r\n  categoria: -1,\r\n  sub_categoria: -1,\r\n  montante: 0,\r\n  data: \"\",\r\n  //recorrencia: \"\",\r\n  id_conta: 4,\r\n  tipo: \"receita\",\r\n};\r\n\r\nexport const ModalRegisto = (props: IModalRegistoProps) => {\r\n  const history = useHistory();\r\n  const [\r\n    categoriasData,\r\n    errorCategorias,\r\n    isLoadingCategorias,\r\n  ] = useFetchCategorias();\r\n  const [\r\n    subcategoriasData,\r\n    errorSubcategorias,\r\n    isLoadingSubcategorias,\r\n  ] = useFetchSubCategoria();\r\n  const [contasData, errorContas, isLoadingContas] = useFetchContas();\r\n\r\n  return (\r\n    <BS.Modal\r\n      show={props.show}\r\n      onHide={() => props.onHide(false)}\r\n      dialogClassName=\"modal-90w\"\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n    >\r\n      <BS.Modal.Header closeButton>\r\n        <BS.Modal.Title id=\"example-custom-modal-styling-title\">\r\n          Receita{\" \"}\r\n        </BS.Modal.Title>\r\n      </BS.Modal.Header>\r\n      <BS.Modal.Body>\r\n        <Formik\r\n          validationSchema={schema}\r\n          onSubmit={(values: IMovimentoData) => {\r\n            debugger;\r\n            SERVICE.methods\r\n              .createReceita(values)\r\n              .then((result) => {\r\n                console.log(\r\n                  \"RECEITA COM SUCESSO! -> Redirecionar para DASHBOARD\"\r\n                );\r\n                props.onHide(false);\r\n              })\r\n              .catch((err) => console.log(\"Erro ao fazer registo\"));\r\n          }}\r\n          initialValues={initialValues}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            handleBlur,\r\n            values,\r\n            touched,\r\n            isValid,\r\n            errors,\r\n          }) => (\r\n            <BS.Form noValidate onSubmit={handleSubmit} className=\"w-100\">\r\n              {/* <div>{JSON.stringify(errors)}</div> */}\r\n              <BS.Row>\r\n                <BS.Col>\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      type=\"text\"\r\n                      name=\"descricao\"\r\n                      placeholder=\"descri√ß√£o\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.descricao}\r\n                      isValid={touched.descricao && !errors.descricao}\r\n                    />\r\n                  </BS.Form.Group>\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      as=\"select\"\r\n                      name=\"categoria\"\r\n                      placeholder=\"categoria\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.categoria}\r\n                      isValid={touched.categoria && !errors.categoria}\r\n                      disabled={isLoadingCategorias}\r\n                    >\r\n                      {isLoadingCategorias ? (\r\n                        <option>Loading...</option>\r\n                      ) : (\r\n                        categoriasData.map((categoria: ICategoria) => (\r\n                          <option value={categoria.id_categoria}>\r\n                            {categoria.nome}\r\n                          </option>\r\n                        ))\r\n                      )}\r\n                    </BS.Form.Control>\r\n                  </BS.Form.Group>\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      as=\"select\"\r\n                      name=\"sub_categoria\"\r\n                      placeholder=\"subcategoria\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.sub_categoria}\r\n                      isValid={touched.sub_categoria && !errors.sub_categoria}\r\n                      disabled={isLoadingCategorias}\r\n                    >\r\n                      {isLoadingSubcategorias ? (\r\n                        <option>Loading...</option>\r\n                      ) : (\r\n                        subcategoriasData.map((subcategoria: ISubCategoria) => (\r\n                          <option>{subcategoria.nome}</option>\r\n                        ))\r\n                      )}\r\n                    </BS.Form.Control>\r\n                  </BS.Form.Group>\r\n\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      type=\"number\"\r\n                      min=\"0.1\"\r\n                      max=\"100000.00\"\r\n                      step=\"0.01\"\r\n                      name=\"montante\"\r\n                      placeholder=\"montante\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.montante}\r\n                      isValid={touched.montante && !errors.montante}\r\n                    />\r\n                  </BS.Form.Group>\r\n\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      type=\"date\"\r\n                      name=\"data\"\r\n                      placeholder=\"data\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.data}\r\n                      isValid={touched.data && !errors.data}\r\n                    />\r\n                  </BS.Form.Group>\r\n\r\n                  {/* <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      as=\"select\"\r\n                      name=\"recorrencia\"\r\n                      placeholder=\"recorr√™ncia\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.recorrencia}\r\n                      isValid={touched.recorrencia && !errors.recorrencia}\r\n                      defaultValue=\"recorr√™ncia\"\r\n                    >\r\n                      <option>recorr√™ncia</option>\r\n                      <option>Mensal</option>\r\n                      <option>Anual</option>\r\n                    </BS.Form.Control>\r\n                  </BS.Form.Group> */}\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      as=\"select\"\r\n                      name=\"id_conta\"\r\n                      placeholder=\"conta\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.id_conta}\r\n                      isValid={touched.id_conta && !errors.id_conta}\r\n                      disabled={isLoadingContas}\r\n                    >\r\n                      {isLoadingContas ? (\r\n                        <option>Loading...</option>\r\n                      ) : (\r\n                        contasData.map((conta: IConta) => (\r\n                          <option value={conta.id_conta}>{conta.nome}</option>\r\n                        ))\r\n                      )}\r\n                    </BS.Form.Control>\r\n                  </BS.Form.Group>\r\n                </BS.Col>\r\n              </BS.Row>\r\n\r\n              <BS.Row className=\"justify-content-between\">\r\n                <BS.Col lg={3}>\r\n                  <BS.Button\r\n                    variant=\"secondary\"\r\n                    type=\"submit\"\r\n                    className=\"w-100 negrito\"\r\n                    /* onClick={() => {\r\n                      props.onHide(false);\r\n                    }} */\r\n                  >\r\n                    salvar\r\n                  </BS.Button>\r\n                </BS.Col>\r\n                <BS.Col lg={3}>\r\n                  <BS.Button\r\n                    variant=\"outline-secondary\"\r\n                    type=\"submit\"\r\n                    className=\"w-100 negrito\"\r\n                    onClick={() => {\r\n                      props.onHide(false);\r\n                    }}\r\n                  >\r\n                    voltar\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n            </BS.Form>\r\n          )}\r\n        </Formik>\r\n      </BS.Modal.Body>\r\n    </BS.Modal>\r\n  );\r\n};\r\n\r\nexport default ModalRegisto;\r\n","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\login\\login.styled.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\login\\login.service.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\fetchers\\useFetchSubCategorias.hook.tsx",["102"],"import * as React from \"react\";\r\nimport { SERVICE } from \"../dashboard.service\";\r\n\r\nexport interface ISubCategoria {\r\n  id_subcategoria: number;\r\n  nome: string;\r\n  id_categoria: number;\r\n}\r\n\r\nexport const useFetchSubCategorias = (): [\r\n  data: ISubCategoria[],\r\n  error: any,\r\n  isLoadig: boolean\r\n] => {\r\n  const [response, setResponse] = React.useState<ISubCategoria[]>([\r\n    { id_subcategoria: -1, id_categoria: -1, nome: \"Selecione...\" },\r\n  ]);\r\n  const [error, setError] = React.useState(null);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      try {\r\n        SERVICE.methods.getSubCategorias().then((r) => {\r\n          setResponse([...response, ...r.data]);\r\n          setIsLoading(false);\r\n        });\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return [response, error, isLoading];\r\n};\r\n\r\nexport default useFetchSubCategorias;\r\n","C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\dashboard.service.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\fetchers\\useFetchContas.hook.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\fetchers\\useFetchCategorias.hook.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\budget\\budget.service.tsx",[],"C:\\Users\\tiago\\OneDrive\\Documentos\\GitHub\\saveitapp\\src\\pages\\dashboard\\fetchers\\useFetchMovimentos.hook.tsx",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":18,"column":20,"nodeType":"109","messageId":"110","endLine":18,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":6,"column":13,"nodeType":"109","messageId":"110","endLine":6,"endColumn":16},{"ruleId":"107","severity":1,"message":"112","line":48,"column":11,"nodeType":"109","messageId":"110","endLine":48,"endColumn":18},{"ruleId":"107","severity":1,"message":"113","line":51,"column":7,"nodeType":"109","messageId":"110","endLine":51,"endColumn":22},{"ruleId":"107","severity":1,"message":"114","line":56,"column":7,"nodeType":"109","messageId":"110","endLine":56,"endColumn":25},{"ruleId":"107","severity":1,"message":"112","line":52,"column":9,"nodeType":"109","messageId":"110","endLine":52,"endColumn":16},{"ruleId":"107","severity":1,"message":"113","line":55,"column":5,"nodeType":"109","messageId":"110","endLine":55,"endColumn":20},{"ruleId":"107","severity":1,"message":"114","line":60,"column":5,"nodeType":"109","messageId":"110","endLine":60,"endColumn":23},{"ruleId":"107","severity":1,"message":"115","line":63,"column":22,"nodeType":"109","messageId":"110","endLine":63,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":33,"column":6,"nodeType":"118","endLine":33,"endColumn":8,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'yup' is defined but never used.","'history' is assigned a value but never used.","'errorCategorias' is assigned a value but never used.","'errorSubcategorias' is assigned a value but never used.","'errorContas' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'response'. Either include it or remove the dependency array. You can also do a functional update 'setResponse(r => ...)' if you only need 'response' in the 'setResponse' call.","ArrayExpression",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [response]",{"range":"125","text":"126"},[880,882],"[response]"]