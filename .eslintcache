[{"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\index.tsx":"1","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\reportWebVitals.ts":"2","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\App.tsx":"3","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\dashboard\\dashboard.page.tsx":"4","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\dashboard\\dashboard.styled.tsx":"5","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\login\\login.page.tsx":"6","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\login\\login.styled.tsx":"7","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\login\\login.service.tsx":"8","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\register\\register.page.tsx":"9","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\register\\register.service.tsx":"10","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\register\\register.styled.tsx":"11","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\dashboard\\components\\modal-registo.component.tsx":"12","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\dashboard\\dashboard.service.tsx":"13","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\dashboard\\fetchers\\useFetchSaldoTotal.hook.tsx":"14"},{"size":500,"mtime":1607102408355,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1607102408415,"results":"17","hashOfConfig":"16"},{"size":1048,"mtime":1607441481857,"results":"18","hashOfConfig":"16"},{"size":7607,"mtime":1608407524339,"results":"19","hashOfConfig":"16"},{"size":1135,"mtime":1608318017744,"results":"20","hashOfConfig":"16"},{"size":4270,"mtime":1608234115769,"results":"21","hashOfConfig":"16"},{"size":799,"mtime":1608207322227,"results":"22","hashOfConfig":"16"},{"size":257,"mtime":1608205667249,"results":"23","hashOfConfig":"16"},{"size":9329,"mtime":1608306547219,"results":"24","hashOfConfig":"16"},{"size":691,"mtime":1608233231332,"results":"25","hashOfConfig":"16"},{"size":870,"mtime":1608306562906,"results":"26","hashOfConfig":"16"},{"size":7074,"mtime":1608405521796,"results":"27","hashOfConfig":"16"},{"size":802,"mtime":1608407167427,"results":"28","hashOfConfig":"16"},{"size":885,"mtime":1608408354184,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"qkq85h",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\index.tsx",[],["61","62"],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\reportWebVitals.ts",[],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\App.tsx",[],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\dashboard\\dashboard.page.tsx",["63"],"import * as React from \"react\";\r\nimport * as S from \"./dashboard.styled\";\r\n\r\nimport * as BS from \"react-bootstrap\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nimport ModalRegisto from \"./components/modal-registo.component\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport useFetchSaldoTotal from \"./fetchers/useFetchSaldoTotal.hook\";\r\n\r\ninterface IDashboarPageProps {}\r\n\r\nexport const DashboarPage: React.FC<IDashboarPageProps> = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [response, error, isLoading] = useFetchSaldoTotal();\r\n\r\n  const dataDespesa = {\r\n    labels: [\"Supermercado\", \"Cinema\", \"Ginásio\"],\r\n    datasets: [\r\n      {\r\n        data: [300, 50, 100],\r\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const dataReceita = {\r\n    labels: [\"EMprego\", \"Bolsa\", \"Outros\"],\r\n    datasets: [\r\n      {\r\n        data: [900, 130, 100],\r\n        backgroundColor: [\"#3ba549\", \"#3642EB\", \"#F0CE06\"],\r\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [showModalReceita, setShouModalReceita] = React.useState<boolean>(\r\n    false\r\n  );\r\n\r\n  const renderModalReceita = () => {\r\n    return (\r\n      <ModalRegisto\r\n        show={showModalReceita}\r\n        onHide={setShouModalReceita}\r\n      ></ModalRegisto>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <S.PageContainer>\r\n      <BS.Container fluid className=\"h-100\">\r\n        <BS.Row className=\"h-100\">\r\n          <BS.Col lg={2} className=\"sidebar\">\r\n            <BS.Container>\r\n              <BS.Row\r\n                className=\"branco\"\r\n                onClick={() => {\r\n                  history.push(\"/dashboard\");\r\n                }}\r\n              >\r\n                <h1 className=\"w-100\">Save iT</h1>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Image\r\n                    className={\"avatar\"}\r\n                    src=\"images/avatar.png\"\r\n                    rounded\r\n                  />\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <h5 className=\"branco\">Bem vindo Tiago!</h5>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Planeamentos\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Investimentos\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Alertas\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button variant=\"secondary\" className=\"fundo-cizento\">\r\n                    Definições\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className=\"mt-2\">\r\n                <BS.Col lg={12}>\r\n                  <BS.Button\r\n                    variant=\"secondary\"\r\n                    className=\"fundo-cizento\"\r\n                    onClick={() => {\r\n                      history.push(\"/login\");\r\n                    }}\r\n                  >\r\n                    Sair\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n            </BS.Container>\r\n          </BS.Col>\r\n          <BS.Col lg={10}>\r\n            <BS.Container fluid className=\"mt-2\">\r\n              <BS.Row>\r\n                <BS.Col lg={3}>\r\n                  <BS.Card className={\"saldo-total\"}>\r\n                    <BS.Card.Body>\r\n                      <BS.Card.Title>Saldo Total</BS.Card.Title>\r\n                      <BS.Card.Text>\r\n                        {isLoading\r\n                          ? \"loading...\"\r\n                          : `${response.saldoTotal} ${response.currency}`}\r\n                      </BS.Card.Text>\r\n                    </BS.Card.Body>\r\n                  </BS.Card>\r\n                </BS.Col>\r\n                <BS.Col lg={3}>\r\n                  <BS.Carousel className={\"saldo-conta\"} indicators={false}>\r\n                    <BS.Carousel.Item>\r\n                      <h5>Saldo Conta</h5>\r\n                      <h5>15,00€</h5>\r\n                      <p>AtivoBank</p>\r\n                    </BS.Carousel.Item>\r\n                  </BS.Carousel>\r\n                </BS.Col>\r\n                <BS.Col lg={3}>\r\n                  <BS.Carousel className={\"saldo-receita\"} indicators={false}>\r\n                    <BS.Carousel.Item>\r\n                      <h5>Receita Mensal</h5>\r\n                      <h5>4,00€</h5>\r\n                      <p>novembro 2020</p>\r\n                    </BS.Carousel.Item>\r\n                  </BS.Carousel>\r\n                </BS.Col>\r\n                <BS.Col lg={3}>\r\n                  <BS.Carousel className={\"saldo-despesa\"} indicators={false}>\r\n                    <BS.Carousel.Item>\r\n                      <h5>Despesa Mensal</h5>\r\n                      <h5>56,00€</h5>\r\n                      <p>novembro 2020</p>\r\n                    </BS.Carousel.Item>\r\n                  </BS.Carousel>\r\n                </BS.Col>\r\n              </BS.Row>\r\n              <BS.Row className={\"mt-2\"}>\r\n                <BS.Col lg=\"8\"></BS.Col>\r\n                <BS.Col lg=\"4\">\r\n                  <BS.Row>\r\n                    <BS.Col lg=\"12\">\r\n                      <BS.Card>\r\n                        <BS.Card.Body>\r\n                          <BS.Card.Title>Receitas novembro 2020</BS.Card.Title>\r\n                          <BS.Card.Text>\r\n                            <Doughnut data={dataReceita} />\r\n                          </BS.Card.Text>\r\n                        </BS.Card.Body>\r\n                      </BS.Card>\r\n                    </BS.Col>\r\n                  </BS.Row>\r\n                  <BS.Row className={\"mt-2\"}>\r\n                    <BS.Col lg={12}>\r\n                      <BS.Card>\r\n                        <BS.Card.Body>\r\n                          <BS.Card.Title>Despesas novembro 2020</BS.Card.Title>\r\n                          <BS.Card.Text>\r\n                            <Doughnut data={dataDespesa} />\r\n                          </BS.Card.Text>\r\n                        </BS.Card.Body>\r\n                      </BS.Card>\r\n                    </BS.Col>\r\n                  </BS.Row>\r\n                </BS.Col>\r\n              </BS.Row>\r\n            </BS.Container>\r\n          </BS.Col>\r\n        </BS.Row>\r\n      </BS.Container>\r\n      <BS.DropdownButton\r\n        id=\"dropdown-basic-button\"\r\n        title=\"+\"\r\n        drop={\"up\"}\r\n        className=\"add-button\"\r\n      >\r\n        <BS.Dropdown.Item\r\n          onClick={() => {\r\n            setShouModalReceita(!showModalReceita);\r\n          }}\r\n        >\r\n          Receita\r\n        </BS.Dropdown.Item>\r\n        <BS.Dropdown.Item href=\"#/action-2\">Despesa</BS.Dropdown.Item>\r\n        <BS.Dropdown.Item href=\"#/action-3\">Conta</BS.Dropdown.Item>\r\n        <BS.Dropdown.Item href=\"#/action-4\">Categoria</BS.Dropdown.Item>\r\n      </BS.DropdownButton>\r\n      {renderModalReceita()}\r\n    </S.PageContainer>\r\n  );\r\n};\r\n","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\dashboard\\dashboard.styled.tsx",[],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\login\\login.page.tsx",[],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\login\\login.styled.tsx",[],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\login\\login.service.tsx",[],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\register\\register.page.tsx",[],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\register\\register.service.tsx",[],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\register\\register.styled.tsx",[],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\dashboard\\components\\modal-registo.component.tsx",["64"],"import * as React from \"react\";\r\nimport * as BS from \"react-bootstrap\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { IRegistoData, SERVICE } from \"../dashboard.service\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Formik } from \"formik\";\r\n\r\ninterface IModalRegistoProps {\r\n  show: boolean;\r\n  onHide: (show: boolean) => void;\r\n}\r\n\r\nconst schema = yup.object({\r\n  descricao: yup.string().trim().required().min(2).max(100),\r\n  categoria: yup\r\n    .string()\r\n    .oneOf([\"Alimentação\", \"Ensino\", \"Carro\"])\r\n    .trim()\r\n    .required(),\r\n  subcategoria: yup.string().min(2).max(100),\r\n  montante: yup.number().required().min(0.1).max(10000),\r\n  data: yup.date().required(),\r\n  recorrencia: yup.string().trim().oneOf([\"Mensal\", \"Anual\"]),\r\n});\r\n\r\nconst initialValues: IRegistoData = {\r\n  descricao: \"\",\r\n  categoria: \"\",\r\n  subcategoria: \"\",\r\n  montante: 0,\r\n  data: new Date().toDateString(),\r\n  recorrencia: \"\",\r\n};\r\n\r\nexport const ModalRegisto = (props: IModalRegistoProps) => {\r\n  const history = useHistory();\r\n  return (\r\n    <BS.Modal\r\n      show={props.show}\r\n      onHide={() => props.onHide(false)}\r\n      dialogClassName=\"modal-90w\"\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n    >\r\n      <BS.Modal.Header closeButton>\r\n        <BS.Modal.Title id=\"example-custom-modal-styling-title\">\r\n          Receita{\" \"}\r\n        </BS.Modal.Title>\r\n      </BS.Modal.Header>\r\n      <BS.Modal.Body>\r\n        <Formik\r\n          validationSchema={schema}\r\n          onSubmit={(values: IRegistoData) => {\r\n            SERVICE.methods\r\n              .doRegister(values)\r\n              .then((result) => {\r\n                console.log(\r\n                  \"REGISTO COM SUCESSO! -> Redirecionar para DASHBOARD\"\r\n                );\r\n                props.onHide(false);\r\n              })\r\n              .catch((err) => console.log(\"Erro ao fazer registo\"));\r\n          }}\r\n          initialValues={initialValues}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            handleBlur,\r\n            values,\r\n            touched,\r\n            isValid,\r\n            errors,\r\n          }) => (\r\n            <BS.Form noValidate onSubmit={handleSubmit} className=\"w-100\">\r\n              <BS.Row>\r\n                <BS.Col>\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      type=\"text\"\r\n                      name=\"descricao\"\r\n                      placeholder=\"descrição\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.descricao}\r\n                      isValid={touched.descricao && !errors.descricao}\r\n                    />\r\n                  </BS.Form.Group>\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      as=\"select\"\r\n                      name=\"categoria\"\r\n                      placeholder=\"categoria\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.categoria}\r\n                      isValid={touched.categoria && !errors.categoria}\r\n                      defaultValue=\"categoria\"\r\n                    >\r\n                      <option>categoria</option>\r\n                      <option>Alimentação</option>\r\n                      <option>Ensino</option>\r\n                      <option>Carro</option>\r\n                    </BS.Form.Control>\r\n                  </BS.Form.Group>\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      as=\"select\"\r\n                      name=\"subcategoria\"\r\n                      placeholder=\"subcategoria\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.subcategoria}\r\n                      isValid={touched.subcategoria && !errors.subcategoria}\r\n                      defaultValue=\"subcategoria\"\r\n                    >\r\n                      <option>subcategoria</option>\r\n                    </BS.Form.Control>\r\n                  </BS.Form.Group>\r\n\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      type=\"number\"\r\n                      min=\"0.1\"\r\n                      max=\"100000.00\"\r\n                      step=\"0.01\"\r\n                      name=\"montante\"\r\n                      placeholder=\"montante\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.montante}\r\n                      isValid={touched.montante && !errors.montante}\r\n                    />\r\n                  </BS.Form.Group>\r\n\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      type=\"date\"\r\n                      name=\"data\"\r\n                      placeholder=\"data\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.data}\r\n                      isValid={touched.data && !errors.data}\r\n                    />\r\n                  </BS.Form.Group>\r\n\r\n                  <BS.Form.Group>\r\n                    <BS.Form.Control\r\n                      className=\"italico\"\r\n                      as=\"select\"\r\n                      name=\"recorrencia\"\r\n                      placeholder=\"recorrência\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.recorrencia}\r\n                      isValid={touched.recorrencia && !errors.recorrencia}\r\n                      defaultValue=\"recorrência\"\r\n                    >\r\n                      <option>recorrência</option>\r\n                      <option>Mensal</option>\r\n                      <option>Anual</option>\r\n                    </BS.Form.Control>\r\n                  </BS.Form.Group>\r\n                </BS.Col>\r\n              </BS.Row>\r\n\r\n              <BS.Row className=\"justify-content-between\">\r\n                <BS.Col lg={3}>\r\n                  <BS.Button\r\n                    variant=\"secondary\"\r\n                    type=\"submit\"\r\n                    className=\"w-100 negrito\"\r\n                  >\r\n                    salvar\r\n                  </BS.Button>\r\n                </BS.Col>\r\n                <BS.Col lg={3}>\r\n                  <BS.Button\r\n                    variant=\"outline-secondary\"\r\n                    type=\"submit\"\r\n                    className=\"w-100 negrito\"\r\n                    onClick={() => {\r\n                      props.onHide(false);\r\n                    }}\r\n                  >\r\n                    voltar\r\n                  </BS.Button>\r\n                </BS.Col>\r\n              </BS.Row>\r\n            </BS.Form>\r\n          )}\r\n        </Formik>\r\n      </BS.Modal.Body>\r\n    </BS.Modal>\r\n  );\r\n};\r\n\r\nexport default ModalRegisto;\r\n","C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\dashboard\\dashboard.service.tsx",[],"C:\\Users\\Irene\\Documents\\Ensino\\PSI\\2020-2021\\PPSI\\Projeto\\SaveIt\\Código frontend\\save-it\\src\\pages\\dashboard\\fetchers\\useFetchSaldoTotal.hook.tsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":18,"column":20,"nodeType":"71","messageId":"72","endLine":18,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":39,"column":9,"nodeType":"71","messageId":"72","endLine":39,"endColumn":16},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]